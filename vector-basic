#define ll long long 
#define fr first
#define sc second
#define MAX ((ll)(1e18+100))
#define MOD ((ll)(1e9+7))
#define HS1 ((ll)(137))
#define HS2 ((ll)(1e9+9))
#define ARRS ((ll)(1e6+900))
#define pb push_back
#define mid ((l+r)>>1)
#define PI 3.14159265358979323846

//#include "pch.h"
#include <vector>
#include <iostream>
#include <algorithm>  // sort
#include <string>

using namespace std;

bool f(int x, int y)
{
	return x > y;  //descending order
}

int main()
{
	//C++ STL
	vector<int> A = { 11,2,3,14 };
	cout << A[1] << endl;
	sort(A.begin(), A.end()); //O(NlogN)

	//2,3,11,14
	//O(logN)
	bool present = binary_search(A.begin(), A.end(), 3); //true
	present = binary_search(A.begin(), A.end(), 4); //false

	A.push_back(100);
	present = binary_search(A.begin(), A.end(), 100); //true

	//2,3,11,14,100
	A.push_back(100);
	A.push_back(100);
	A.push_back(100);
	A.push_back(100);
	//2,3,11,14,100,100,100,100,123
	A.push_back(123);

	//vector<int>::iterator it = lower_bound(A.begin(), A.end(), 100); // <=
	auto it = lower_bound(A.begin(), A.end(), 100);
	//vector<int>::iterator it2 = upper_bound(A.begin(), A.end(), 100); // >
	auto it2 = upper_bound(A.begin(), A.end(), 100);

	cout << *it << " " << *it2 << endl;
	cout << it2 - it << endl; //5

	sort(A.begin(), A.end(), f);

	//vector<int>::iterator it3;
	//for (it3 = A.begin(); it3 != A.end(); it3++)
	for (int x: A)
	{
		//cout << *it3 << " ";
		cout << x << " ";
	}
	cout << endl;
  
  
  
  
}
